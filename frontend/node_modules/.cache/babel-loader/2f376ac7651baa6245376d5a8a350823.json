{"ast":null,"code":"import axios from \"axios\";\nimport { apiBaseUrl } from \"../constant/constant\";\nconst token = localStorage.getItem(\"front_user_token\");\nconst headerData = {\n  Authorization: `Bearer ${token}`\n};\nexport const getAllbussTypes = async () => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/frontend/business/getAll`);\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400\n    };\n  }\n}; // export const getBusinessByUserAction = async () => {\n//   try {\n//     const response = await axios.get(\n//       `${apiBaseUrl}/frontend/company/getBussiness`,\n//       { headers: headerData }\n//     );\n//     if (response.status === 200) {\n//       return response.data;\n//     } else {\n//       throw new Error(response.message);\n//     }\n//   } catch (err) {\n//     return {\n//       data: \"\",\n//       response: err.message,\n//       status: 400,\n//     };\n//   }\n// };\n\nexport const additionalBusinessService = async (data, tokenResponse) => {\n  const headerData1 = {\n    Authorization: `Bearer ${tokenResponse}`\n  };\n\n  try {\n    const response = await axios.post(`${apiBaseUrl}/admin/businessService/create`, data, {\n      headers: headerData1\n    });\n    return response.data;\n  } catch (err) {\n    return {\n      data: \"\",\n      status: 400,\n      message: err.message\n    };\n  }\n};\nexport const getServicesByUserId = async id => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/admin/businessService/getByUserId/${id}`, {\n      headers: headerData\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400\n    };\n  }\n};","map":{"version":3,"names":["axios","apiBaseUrl","token","localStorage","getItem","headerData","Authorization","getAllbussTypes","response","get","status","data","Error","message","err","additionalBusinessService","tokenResponse","headerData1","post","headers","getServicesByUserId","id"],"sources":["/home/webxpert/NodeReactApp/NodeReactApp/frontend/src/services/businessServices.js"],"sourcesContent":["import axios from \"axios\";\nimport { apiBaseUrl } from \"../constant/constant\";\n\nconst token = localStorage.getItem(\"front_user_token\");\nconst headerData = { Authorization: `Bearer ${token}` };\n\nexport const getAllbussTypes = async () => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/frontend/business/getAll`);\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400,\n    };\n  }\n};\n\n// export const getBusinessByUserAction = async () => {\n//   try {\n//     const response = await axios.get(\n//       `${apiBaseUrl}/frontend/company/getBussiness`,\n//       { headers: headerData }\n//     );\n//     if (response.status === 200) {\n//       return response.data;\n//     } else {\n//       throw new Error(response.message);\n//     }\n//   } catch (err) {\n//     return {\n//       data: \"\",\n//       response: err.message,\n//       status: 400,\n//     };\n//   }\n// };\n\nexport const additionalBusinessService = async (data, tokenResponse) => {\n  const headerData1 = { Authorization: `Bearer ${tokenResponse}` };\n\n  try {\n    const response = await axios.post(\n      `${apiBaseUrl}/admin/businessService/create`,\n      data,\n      { headers: headerData1 }\n    );\n    return response.data;\n  } catch (err) {\n    return {\n      data: \"\",\n      status: 400,\n      message: err.message,\n    };\n  }\n};\n\nexport const getServicesByUserId = async (id) => {\n  try {\n    const response = await axios.get(\n      `${apiBaseUrl}/admin/businessService/getByUserId/${id}`,\n      { headers: headerData }\n    );\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400,\n    };\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAd;AACA,MAAMC,UAAU,GAAG;EAAEC,aAAa,EAAG,UAASJ,KAAM;AAAjC,CAAnB;AAEA,OAAO,MAAMK,eAAe,GAAG,YAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,UAAW,2BAAxB,CAAvB;;IACA,IAAIO,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;MAC3B,OAAOF,QAAQ,CAACG,IAAhB;IACD,CAFD,MAEO;MACL,MAAM,IAAIC,KAAJ,CAAUJ,QAAQ,CAACK,OAAnB,CAAN;IACD;EACF,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZ,OAAO;MACLH,IAAI,EAAE,EADD;MAELH,QAAQ,EAAEM,GAAG,CAACD,OAFT;MAGLH,MAAM,EAAE;IAHH,CAAP;EAKD;AACF,CAfM,C,CAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,yBAAyB,GAAG,OAAOJ,IAAP,EAAaK,aAAb,KAA+B;EACtE,MAAMC,WAAW,GAAG;IAAEX,aAAa,EAAG,UAASU,aAAc;EAAzC,CAApB;;EAEA,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACkB,IAAN,CACpB,GAAEjB,UAAW,+BADO,EAErBU,IAFqB,EAGrB;MAAEQ,OAAO,EAAEF;IAAX,CAHqB,CAAvB;IAKA,OAAOT,QAAQ,CAACG,IAAhB;EACD,CAPD,CAOE,OAAOG,GAAP,EAAY;IACZ,OAAO;MACLH,IAAI,EAAE,EADD;MAELD,MAAM,EAAE,GAFH;MAGLG,OAAO,EAAEC,GAAG,CAACD;IAHR,CAAP;EAKD;AACF,CAjBM;AAmBP,OAAO,MAAMO,mBAAmB,GAAG,MAAOC,EAAP,IAAc;EAC/C,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CACpB,GAAER,UAAW,sCAAqCoB,EAAG,EADjC,EAErB;MAAEF,OAAO,EAAEd;IAAX,CAFqB,CAAvB;;IAIA,IAAIG,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;MAC3B,OAAOF,QAAQ,CAACG,IAAhB;IACD,CAFD,MAEO;MACL,MAAM,IAAIC,KAAJ,CAAUJ,QAAQ,CAACK,OAAnB,CAAN;IACD;EACF,CAVD,CAUE,OAAOC,GAAP,EAAY;IACZ,OAAO;MACLH,IAAI,EAAE,EADD;MAELH,QAAQ,EAAEM,GAAG,CAACD,OAFT;MAGLH,MAAM,EAAE;IAHH,CAAP;EAKD;AACF,CAlBM"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport { apiBaseUrl } from \"../constant/constant\";\nconst token = localStorage.getItem(\"admin_token\");\nconst headerData = {\n  Authorization: `Bearer ${token}`\n};\nexport const addUser = async data => {\n  try {\n    const response = await axios.post(`${apiBaseUrl}/frontend/user/create`, data, {\n      headers: headerData\n    });\n\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400\n    };\n  }\n};\nexport const getUser = async (pageNo, limit) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/frontend/user/get/${pageNo}/${limit}`, {\n      headers: headerData\n    });\n\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400\n    };\n  }\n};\nexport const removeUser = async id => {\n  try {\n    const response = await axios.delete(`${apiBaseUrl}/frontend/user/remove/${id}`, {\n      headers: headerData\n    });\n\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400\n    };\n  }\n};\nexport const editUser = async (id, data) => {\n  try {\n    const response = await axios.put(`${apiBaseUrl}/frontend/user/edit/${id}`, data, {\n      headers: headerData\n    });\n\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400\n    };\n  }\n};\nexport const searchUser = async (pageNo, limit, text) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/frontend/user/search/${pageNo}/${limit}/${text}`, {\n      headers: headerData\n    });\n\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400\n    };\n  }\n};\nexport const changeLoginStatus = async obj => {\n  let token = localStorage.getItem(\"front_user_token\");\n  const response = await axios.put(`${apiBaseUrl}/frontend/user/loginStatus`, obj, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nexport const GetUserByID = async id => {\n  console.log(id, \"dd\");\n\n  try {\n    const response = await axios.get(`${apiBaseUrl}/frontend/getUser/${id}`, {\n      headers: headerData\n    });\n\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400\n    };\n  }\n};\n_c = GetUserByID;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUserByID\");","map":{"version":3,"names":["axios","apiBaseUrl","token","localStorage","getItem","headerData","Authorization","addUser","data","response","post","headers","status","Error","message","err","getUser","pageNo","limit","get","removeUser","id","delete","editUser","put","searchUser","text","changeLoginStatus","obj","GetUserByID","console","log"],"sources":["/home/webxpert/NodeReactApp/NodeReactApp/frontend/src/services/userServices.js"],"sourcesContent":["import axios from \"axios\";\nimport { apiBaseUrl } from \"../constant/constant\";\n\nconst token = localStorage.getItem(\"admin_token\");\nconst headerData = { Authorization: `Bearer ${token}` };\n\nexport const addUser = async (data) => {\n  try {\n    const response = await axios.post(\n      `${apiBaseUrl}/frontend/user/create`,\n      data,\n      { headers: headerData }\n    );\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400,\n    };\n  }\n};\n\nexport const getUser = async (pageNo, limit) => {\n  try {\n    const response = await axios.get(\n      `${apiBaseUrl}/frontend/user/get/${pageNo}/${limit}`,\n      { headers: headerData }\n    );\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400,\n    };\n  }\n};\n\nexport const removeUser = async (id) => {\n  try {\n    const response = await axios.delete(\n      `${apiBaseUrl}/frontend/user/remove/${id}`,\n      { headers: headerData }\n    );\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400,\n    };\n  }\n};\n\nexport const editUser = async (id, data) => {\n  try {\n    const response = await axios.put(\n      `${apiBaseUrl}/frontend/user/edit/${id}`,\n      data,\n      { headers: headerData }\n    );\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400,\n    };\n  }\n};\n\nexport const searchUser = async (pageNo, limit, text) => {\n  try {\n    const response = await axios.get(\n      `${apiBaseUrl}/frontend/user/search/${pageNo}/${limit}/${text}`,\n      { headers: headerData }\n    );\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400,\n    };\n  }\n};\n\nexport const changeLoginStatus = async (obj) => {\n  let token = localStorage.getItem(\"front_user_token\");\n  const response = await axios.put(\n    `${apiBaseUrl}/frontend/user/loginStatus`,\n    obj,\n\n    {\n      headers: { Authorization: `Bearer ${token}` },\n    }\n  );\n  return response.data;\n};\n\nexport const GetUserByID = async (id) => {\n  console.log(id, \"dd\");\n  try {\n    const response = await axios.get(\n      `${apiBaseUrl}/frontend/getUser/${id}`,\n\n      { headers: headerData }\n    );\n    if (response.status == 200) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (err) {\n    return {\n      data: \"\",\n      response: err.message,\n      status: 400,\n    };\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
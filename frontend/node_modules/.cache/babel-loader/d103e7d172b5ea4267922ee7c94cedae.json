{"ast":null,"code":"var _jsxFileName = \"/home/webxpert/NodeReactApp/NodeReactApp/frontend/src/pages/Goals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Col, Form, Row, Button } from \"react-bootstrap\";\nimport HeaderTop from \"../components/HeaderTop\";\nimport Sidebarmenu from \"../components/Sidebarmenu\";\nimport { BsQuestionLg } from \"react-icons/bs\";\nimport Footer from \"../components/Footer\";\nimport { getBusinessByUserAction } from \"../services/userGoalServices\";\nimport { BusinessServiceModal } from \"../modals/BusinessService\";\nimport GoalsServiceform from \"./GoalsServiceform\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveGoalBudgetAction } from \"../services/goalCompanyBudgetService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createNotification } from \"../helper/notification\";\nimport { ToastContainer } from \"react-toastify\";\nimport { GoalsById } from \"../services/goalCompanyBudgetService\";\nimport * as commonService from \"../../src/services/commonService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Goals = () => {\n  _s();\n\n  const userId = useSelector(state => state && state.auth && state.auth.user && state.auth.user._id);\n  const [companyBudgetObject, setCompanyBudgetObject] = React.useState(\"\");\n  const [calculate, setCalculate] = useState(false);\n  const navigate = useNavigate();\n  const [calculatedgoals, setCalculatedGoals] = useState({\n    yearlyClients: 0,\n    monthlyClients: 0,\n    weeklyClients: 0,\n    hoursPerDay: 0\n  });\n  let [companyBudget, setComapanyBudget] = React.useState({\n    revenueEarn: \"50000\",\n    workPerDay: \"\",\n    workPerWeek: \"\"\n  });\n  const [error, setError] = useState([]);\n  const [yearlyIncome, setYearlyIncome] = useState(\"\");\n  const [error1, setError1] = useState([]);\n  let [service, setService] = useState([]);\n  let [serviceNew, setServiceNew] = useState([{\n    serviceCharge: \"\",\n    serviceHours: \"\",\n    serviceMinute: \"\",\n    checked: false\n  }]);\n  const [serviceCount, setServiceCount] = useState([]);\n\n  const handlecompanyBudget = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const data = e.target.validity.valid ? value : undefined;\n\n    if (data !== undefined) {\n      setComapanyBudget({ ...companyBudget,\n        [name]: value\n      });\n    }\n  };\n\n  const [atleastOne, setAtleastOne] = useState(true);\n  const [totalChargeService, setTotalChargeService] = useState();\n  const idResponse = useSelector(state => state.auth.user);\n  const tokenResponse = useSelector(state => state.auth.token);\n\n  const validation = () => {\n    const service = [...serviceNew];\n    let formErrors = [];\n    const {\n      revenueEarn,\n      workPerDay,\n      workPerWeek\n    } = companyBudget;\n    let isValid = true;\n    const formError = {};\n    let onlyNumbers = /^[0-9]+$/;\n\n    if (companyBudget) {\n      if (!revenueEarn) {\n        isValid = false;\n        formError[\"revenueEarn\"] = \"Revenue Earn is required\";\n      } else if (!revenueEarn.match(onlyNumbers)) {\n        isValid = false;\n        formError[\"revenueEarn\"] = \"Revenue Earn must be numbers only\";\n      }\n\n      if (!workPerDay) {\n        isValid = false;\n        formError[\"workPerDay\"] = \"Work Per Day is required\";\n      } else if (workPerDay == \"Select\") {\n        isValid = false;\n        formError[\"workPerDay\"] = \"Work Per Day is required\";\n      }\n\n      if (!workPerWeek) {\n        isValid = false;\n        formError[\"workPerWeek\"] = \"Work Per Week is required\";\n      } else if (workPerWeek == \"Select\") {\n        isValid = false;\n        formError[\"workPerWeek\"] = \"Work Per Week is required\";\n      }\n    }\n\n    let isAtleastOne = false;\n    service.filter((val, index) => {\n      let obj = {};\n\n      if (val.checked) {\n        isAtleastOne = true;\n\n        if (!val.serviceHours || val.serviceHours.length === 0) {\n          obj.serviceHours = \"Service Hours is Required\";\n          isValid = false;\n        }\n\n        if (!val.serviceCharge || val.serviceCharge.length === 0) {\n          obj.serviceCharge = \"Service Charge is Required\";\n          isValid = false;\n        } // if (!val.serviceMinute || val.serviceMinute.length === 0) {\n        //   obj.serviceMinute = \"Service Minute is Required\";\n        //   isValid = false;\n        // }\n\n\n        if (!isValid) {\n          formErrors[index] = obj;\n        }\n      }\n    });\n    setAtleastOne(isAtleastOne);\n    setError(formError);\n    setError1(formErrors);\n    return isValid;\n  };\n\n  const getServiceByUser = async tokenResponse => {\n    const response = await getBusinessByUserAction(tokenResponse);\n\n    if (response && response.data) {\n      setServiceCount(response.data.service);\n      setService(response.data.service);\n      setCompanyBudgetObject(response.data);\n    }\n  };\n\n  const getGoalsBudget = async () => {\n    const response = await GoalsById(userId, tokenResponse);\n\n    if (response && response.data && response.data.data && response.data.data.length === 0) {\n      getBusinessByUserAction(tokenResponse).then(res => {\n        setServiceNew(res.data.service);\n      });\n    } else {\n      let Goals_Budget = response.data.data;\n\n      if (Goals_Budget) {\n        Goals_Budget && Goals_Budget.length > 0 && Goals_Budget.map(val => {\n          return setComapanyBudget(val.companyBudget);\n        });\n      }\n\n      let arr = [];\n      setAtleastOne(true);\n\n      if (Goals_Budget) {\n        Goals_Budget && Goals_Budget.length > 0 && Goals_Budget.map((val, index) => {\n          setCalculatedGoals(val.calculatedgoals);\n\n          if (val.service.length > 0) {\n            val.service.map((val1, index1) => {\n              return arr.push(val1);\n            });\n          }\n        });\n        setServiceNew(arr);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getGoalsBudget();\n  }, [userId]);\n\n  const handleService = (e, serviceIndex) => {\n    const data = e.target.validity.valid ? e.target.value : undefined;\n    let serviceArray = [...serviceNew];\n    console.log(serviceArray, \"serviceArray\");\n\n    if (e.target.name === \"checked\") {\n      serviceArray[serviceIndex][e.target.name] = !serviceArray[serviceIndex][e.target.name];\n    } else {\n      serviceArray[serviceIndex][e.target.name] = e.target.value;\n    }\n\n    if (data !== undefined) {\n      setServiceNew(serviceArray);\n    }\n  };\n\n  const handleCalculate = async () => {\n    if (validation() && atleastOne) {\n      setCalculate(true);\n      let arr = [];\n      let arr1 = [];\n      let arr2 = []; //revenu\n\n      let revenue = parseInt(companyBudget && companyBudget.revenueEarn); //working service hours\n\n      let totalServiceHours = 0;\n      parseInt(serviceNew && serviceNew.length > 0 && serviceNew.filter(val => {\n        if (val.checked === true) {\n          return arr.push(val);\n        }\n      }));\n      parseInt(arr.map(val => {\n        if (val.serviceHours) {\n          return totalServiceHours += parseInt(val.serviceHours);\n        }\n      }));\n      let serviceHoursToMinutes = totalServiceHours * 60;\n      let totalServiceMinutes = 0;\n      parseInt(serviceNew && serviceNew.length > 0 && serviceNew.filter(val => {\n        if (val.checked == true) {\n          return arr1.push(val);\n        }\n      }));\n      arr1.map(val => {\n        if (val.serviceMinute) {\n          return totalServiceMinutes += parseInt(val.serviceMinute);\n        }\n      });\n      let minutesForWorkPerDay = companyBudget && companyBudget.workPerDay * 60;\n      let TotalMinutesForServices = serviceHoursToMinutes + totalServiceMinutes; // let hoursPerDay = Math.round(\n      //   minutesForWorkPerDay / TotalMinutesForServices\n      // );\n\n      let hoursPerDay = minutesForWorkPerDay / TotalMinutesForServices;\n      let totalServiceCharges = 0;\n      let obj2 = {};\n      serviceNew && serviceNew.length > 0 && serviceNew.filter(val => {\n        if (val.checked == true) {\n          return arr2.push(val);\n        }\n      });\n      arr2.map(val => {\n        if (val.serviceCharge) {\n          totalServiceCharges += parseInt(val.serviceCharge);\n        }\n      });\n      let totalClientCharges = parseInt(totalServiceCharges * hoursPerDay);\n      let yearlyClients = revenue / totalClientCharges;\n      let monthlyClients = yearlyClients / 12;\n      let weeklyClients = monthlyClients / 4;\n      let obj = {\n        yearlyClients: Math.round(yearlyClients),\n        monthlyClients: Math.round(monthlyClients),\n        weeklyClients: Math.round(weeklyClients),\n        hoursPerDay: Math.round(hoursPerDay),\n        totalServiceCharges: totalServiceCharges\n      };\n      obj2.cal = obj;\n      let calculategoalBudget = {\n        companyBudget: companyBudget,\n        service: serviceNew,\n        calculatedgoals: obj2.cal\n      };\n\n      if (TotalMinutesForServices > minutesForWorkPerDay) {\n        createNotification(\"error\", \"Total working hours should be greater than total working hours of service\");\n      } else {\n        const saveGoalBudget = await saveGoalBudgetAction(calculategoalBudget, tokenResponse);\n\n        if (saveGoalBudget.status === 200) {\n          createNotification(\"success\", saveGoalBudget.data.message);\n        }\n\n        getGoalsBudget();\n      } // });\n\n    } else {\n      createNotification(\"error\", \"Validate the form first\");\n    }\n\n    let totalServiceCharge = 0;\n    serviceNew && serviceNew.length > 0 && serviceNew.filter(val => val.checked == true).map(val => totalServiceCharge += parseInt(val.serviceCharge));\n    setTotalChargeService(totalServiceCharge);\n  };\n\n  const handleNumber = () => {\n    navigate(`/number/${idResponse._id}`);\n  };\n\n  const getFunction = () => {\n    getGoalsBudget();\n  };\n\n  const revenuData = async () => {\n    const repsonse = await commonService.getPersonalBudgetAction(tokenResponse);\n    setYearlyIncome(repsonse && repsonse.personalBudget && repsonse.personalBudget.summaryObject ? repsonse.personalBudget.summaryObject.netAnnualRemainings : \"\");\n  };\n\n  useEffect(() => {\n    revenuData();\n  }, []);\n  useEffect(() => {\n    revenuData();\n  }, [tokenResponse]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebarmenu\",\n            children: /*#__PURE__*/_jsxDEV(Sidebarmenu, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ds-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"page-title\",\n              children: \"Your Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ds-goal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"goal-heading\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"goalbox\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"icon\",\n                        children: [calculatedgoals && calculatedgoals.weeklyClients === 0 && calculatedgoals.monthlyClients === 0 && calculatedgoals.yearlyClients === 0 && calculatedgoals.hoursPerDay === 0 ? /*#__PURE__*/_jsxDEV(BsQuestionLg, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 375,\n                          columnNumber: 29\n                        }, this) : calculatedgoals.weeklyClients === 0 ? 0 : calculatedgoals.weeklyClients > 0 ? calculatedgoals.weeklyClients : null, /*#__PURE__*/_jsxDEV(\"h4\", {\n                          children: \"Weekly Goals\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 381,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"goalbox\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"icon\",\n                        children: [calculatedgoals && calculatedgoals.weeklyClients === 0 && calculatedgoals.monthlyClients === 0 && calculatedgoals.yearlyClients === 0 && calculatedgoals.hoursPerDay === 0 ? /*#__PURE__*/_jsxDEV(BsQuestionLg, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 393,\n                          columnNumber: 29\n                        }, this) : calculatedgoals.monthlyClients === 0 ? 0 : calculatedgoals.monthlyClients > 0 ? calculatedgoals.monthlyClients : null, /*#__PURE__*/_jsxDEV(\"h4\", {\n                          children: \"Monthly Goals\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 399,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"goalbox\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"icon\",\n                        children: [calculatedgoals && calculatedgoals.weeklyClients === 0 && calculatedgoals.monthlyClients === 0 && calculatedgoals.yearlyClients === 0 && calculatedgoals.hoursPerDay === 0 ? /*#__PURE__*/_jsxDEV(BsQuestionLg, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 29\n                        }, this) : calculatedgoals.yearlyClients === 0 ? 0 : calculatedgoals.yearlyClients > 0 ? calculatedgoals.yearlyClients : null, /*#__PURE__*/_jsxDEV(\"h4\", {\n                          children: [\" \", \"Yearly \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 419,\n                            columnNumber: 36\n                          }, this), \" Goals\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 417,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ds-goal-table\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bgform\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-wrapper\",\n                    children: /*#__PURE__*/_jsxDEV(Form, {\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          xs: 6,\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            className: \"mb-3\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: [\"How much addtional business revenue do you want to earn beyond your personal revenue of: $\", yearlyIncome ? yearlyIncome : \"\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 433,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"text\",\n                              pattern: \"[0-9]*\",\n                              name: \"revenueEarn\",\n                              value: companyBudget.revenueEarn,\n                              onChange: handlecompanyBudget\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 438,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"error\",\n                              children: error && error.revenueEarn\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 445,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 432,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 431,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          xs: 6,\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            className: \"mb-3\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"How many hours do you want to work a day?\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 452,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                              name: \"workPerDay\",\n                              value: companyBudget.workPerDay,\n                              onChange: handlecompanyBudget,\n                              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                children: \"Select\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 460,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"1\",\n                                children: \"1 Hour\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 461,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"2\",\n                                children: \"2 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 462,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"3\",\n                                children: \"3 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 463,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"4\",\n                                children: \"4 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 464,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"5\",\n                                children: \"5 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 465,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"6\",\n                                children: \"6 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 466,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"7\",\n                                children: \"7 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 467,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"8\",\n                                children: \"8 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 468,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"9\",\n                                children: \"9 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 469,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"10\",\n                                children: \"10 Hours\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 470,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 455,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"error\",\n                              children: error && error.workPerDay\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 472,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 451,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 450,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          xs: 6,\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            className: \"mb-3\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"How many days do you want to work a week?\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 479,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                              name: \"workPerWeek\",\n                              value: companyBudget.workPerWeek,\n                              onChange: handlecompanyBudget,\n                              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                children: \"Select\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 487,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"1\",\n                                children: \"1 Day\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 488,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"2\",\n                                children: \"2 Days\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 489,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"3\",\n                                children: \"3 Days\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 490,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"4\",\n                                children: \"4 Days\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 491,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"5\",\n                                children: \"5 Days\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 492,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"6\",\n                                children: \"6 Days\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 493,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"7\",\n                                children: \"7 Days\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 494,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 482,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"error\",\n                              children: error && error.workPerWeek\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 496,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 478,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 477,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 430,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"service-provided\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      className: \"title\",\n                      children: \"What Services do you provide?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"service-list\",\n                      children: serviceNew && serviceNew.length > 0 && serviceNew.map((val, index) => {\n                        return /*#__PURE__*/_jsxDEV(GoalsServiceform, {\n                          index: index,\n                          service: val,\n                          serviceName: val.service,\n                          handleService: handleService,\n                          error1: error1,\n                          tokenResponse: tokenResponse\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 511,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gd-btn\",\n                    children: [/*#__PURE__*/_jsxDEV(BusinessServiceModal, {\n                      getServiceByUser: getServiceByUser,\n                      getFunction: getFunction\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleCalculate,\n                      children: \"Calculate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      children: \"Reset\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"personal-budget-box\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: [\" \", \"Based on your personal budget and your goal above,here what we suggest you need to reach them\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: [\"Total amount that can be earned per day for these services $\", calculatedgoals.totalServiceCharges ? calculatedgoals.totalServiceCharges : 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"average-list\",\n                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                        className: \"avgicon\",\n                        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"icon\",\n                            children: calculatedgoals && calculatedgoals.weeklyClients === 0 && calculatedgoals.monthlyClients === 0 && calculatedgoals.yearlyClients === 0 && calculatedgoals.hoursPerDay === 0 ? /*#__PURE__*/_jsxDEV(BsQuestionLg, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 555,\n                              columnNumber: 33\n                            }, this) : calculatedgoals.weeklyClients === 0 ? 0 : calculatedgoals.weeklyClients > 0 ? calculatedgoals.weeklyClients : null\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 549,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"cl-name\",\n                            children: \"Clients Weekly\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 562,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 548,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"icon\",\n                            children: calculatedgoals && calculatedgoals.weeklyClients === 0 && calculatedgoals.monthlyClients === 0 && calculatedgoals.yearlyClients === 0 && calculatedgoals.hoursPerDay === 0 ? /*#__PURE__*/_jsxDEV(BsQuestionLg, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 571,\n                              columnNumber: 33\n                            }, this) : calculatedgoals.monthlyClients === 0 ? 0 : calculatedgoals.monthlyClients > 0 ? calculatedgoals.monthlyClients : null\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 565,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"cl-name\",\n                            children: \"Clients Monthly\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 578,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 564,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"icon\",\n                            children: calculatedgoals && calculatedgoals.weeklyClients === 0 && calculatedgoals.monthlyClients === 0 && calculatedgoals.yearlyClients === 0 && calculatedgoals.hoursPerDay === 0 ? /*#__PURE__*/_jsxDEV(BsQuestionLg, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 587,\n                              columnNumber: 33\n                            }, this) : calculatedgoals.yearlyClients === 0 ? 0 : calculatedgoals.yearlyClients > 0 ? calculatedgoals.yearlyClients : null\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 581,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"cl-name\",\n                            children: \"Clients Annualy\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 594,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 580,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 547,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 546,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleNumber,\n                      children: \"Commit to These Goals!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Goals, \"lPt4OzRJTIcRpAoV++3JVFwi1hU=\", false, function () {\n  return [useSelector, useNavigate, useSelector, useSelector];\n});\n\n_c = Goals;\nexport default Goals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useState","useEffect","Container","Col","Form","Row","Button","HeaderTop","Sidebarmenu","BsQuestionLg","Footer","getBusinessByUserAction","BusinessServiceModal","GoalsServiceform","useDispatch","useSelector","saveGoalBudgetAction","useNavigate","createNotification","ToastContainer","GoalsById","commonService","Goals","userId","state","auth","user","_id","companyBudgetObject","setCompanyBudgetObject","calculate","setCalculate","navigate","calculatedgoals","setCalculatedGoals","yearlyClients","monthlyClients","weeklyClients","hoursPerDay","companyBudget","setComapanyBudget","revenueEarn","workPerDay","workPerWeek","error","setError","yearlyIncome","setYearlyIncome","error1","setError1","service","setService","serviceNew","setServiceNew","serviceCharge","serviceHours","serviceMinute","checked","serviceCount","setServiceCount","handlecompanyBudget","e","name","value","target","data","validity","valid","undefined","atleastOne","setAtleastOne","totalChargeService","setTotalChargeService","idResponse","tokenResponse","token","validation","formErrors","isValid","formError","onlyNumbers","match","isAtleastOne","filter","val","index","obj","length","getServiceByUser","response","getGoalsBudget","then","res","Goals_Budget","map","arr","val1","index1","push","handleService","serviceIndex","serviceArray","console","log","handleCalculate","arr1","arr2","revenue","parseInt","totalServiceHours","serviceHoursToMinutes","totalServiceMinutes","minutesForWorkPerDay","TotalMinutesForServices","totalServiceCharges","obj2","totalClientCharges","Math","round","cal","calculategoalBudget","saveGoalBudget","status","message","totalServiceCharge","handleNumber","getFunction","revenuData","repsonse","getPersonalBudgetAction","personalBudget","summaryObject","netAnnualRemainings"],"sources":["/home/webxpert/NodeReactApp/NodeReactApp/frontend/src/pages/Goals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Form, Row, Button } from \"react-bootstrap\";\nimport HeaderTop from \"../components/HeaderTop\";\nimport Sidebarmenu from \"../components/Sidebarmenu\";\nimport { BsQuestionLg } from \"react-icons/bs\";\nimport Footer from \"../components/Footer\";\nimport { getBusinessByUserAction } from \"../services/userGoalServices\";\nimport { BusinessServiceModal } from \"../modals/BusinessService\";\nimport GoalsServiceform from \"./GoalsServiceform\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveGoalBudgetAction } from \"../services/goalCompanyBudgetService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createNotification } from \"../helper/notification\";\nimport { ToastContainer } from \"react-toastify\";\nimport { GoalsById } from \"../services/goalCompanyBudgetService\";\nimport * as commonService from \"../../src/services/commonService\";\n\nconst Goals = () => {\n  const userId = useSelector(\n    (state) => state && state.auth && state.auth.user && state.auth.user._id\n  );\n\n  const [companyBudgetObject, setCompanyBudgetObject] = React.useState(\"\");\n  const [calculate, setCalculate] = useState(false);\n  const navigate = useNavigate();\n\n  const [calculatedgoals, setCalculatedGoals] = useState({\n    yearlyClients: 0,\n    monthlyClients: 0,\n    weeklyClients: 0,\n    hoursPerDay: 0,\n  });\n  let [companyBudget, setComapanyBudget] = React.useState({\n    revenueEarn: \"50000\",\n    workPerDay: \"\",\n    workPerWeek: \"\",\n  });\n  const [error, setError] = useState([]);\n  const [yearlyIncome, setYearlyIncome] = useState(\"\");\n  const [error1, setError1] = useState([]);\n\n  let [service, setService] = useState([]);\n  let [serviceNew, setServiceNew] = useState([\n    {\n      serviceCharge: \"\",\n      serviceHours: \"\",\n      serviceMinute: \"\",\n      checked: false,\n    },\n  ]);\n\n  const [serviceCount, setServiceCount] = useState([]);\n\n  const handlecompanyBudget = (e) => {\n    const { name, value } = e.target;\n    const data = e.target.validity.valid ? value : undefined;\n    if (data !== undefined) {\n      setComapanyBudget({\n        ...companyBudget,\n        [name]: value,\n      });\n    }\n  };\n\n  const [atleastOne, setAtleastOne] = useState(true);\n\n  const [totalChargeService, setTotalChargeService] = useState();\n\n  const idResponse = useSelector((state) => state.auth.user);\n\n  const tokenResponse = useSelector((state) => state.auth.token);\n\n  const validation = () => {\n    const service = [...serviceNew];\n    let formErrors = [];\n    const { revenueEarn, workPerDay, workPerWeek } = companyBudget;\n    let isValid = true;\n    const formError = {};\n    let onlyNumbers = /^[0-9]+$/;\n    if (companyBudget) {\n      if (!revenueEarn) {\n        isValid = false;\n        formError[\"revenueEarn\"] = \"Revenue Earn is required\";\n      } else if (!revenueEarn.match(onlyNumbers)) {\n        isValid = false;\n        formError[\"revenueEarn\"] = \"Revenue Earn must be numbers only\";\n      }\n      if (!workPerDay) {\n        isValid = false;\n        formError[\"workPerDay\"] = \"Work Per Day is required\";\n      } else if (workPerDay == \"Select\") {\n        isValid = false;\n        formError[\"workPerDay\"] = \"Work Per Day is required\";\n      }\n      if (!workPerWeek) {\n        isValid = false;\n        formError[\"workPerWeek\"] = \"Work Per Week is required\";\n      } else if (workPerWeek == \"Select\") {\n        isValid = false;\n        formError[\"workPerWeek\"] = \"Work Per Week is required\";\n      }\n    }\n\n    let isAtleastOne = false;\n    service.filter((val, index) => {\n      let obj = {};\n      if (val.checked) {\n        isAtleastOne = true;\n\n        if (!val.serviceHours || val.serviceHours.length === 0) {\n          obj.serviceHours = \"Service Hours is Required\";\n          isValid = false;\n        }\n        if (!val.serviceCharge || val.serviceCharge.length === 0) {\n          obj.serviceCharge = \"Service Charge is Required\";\n          isValid = false;\n        }\n        // if (!val.serviceMinute || val.serviceMinute.length === 0) {\n        //   obj.serviceMinute = \"Service Minute is Required\";\n        //   isValid = false;\n        // }\n        if (!isValid) {\n          formErrors[index] = obj;\n        }\n      }\n    });\n    setAtleastOne(isAtleastOne);\n\n    setError(formError);\n    setError1(formErrors);\n\n    return isValid;\n  };\n  const getServiceByUser = async (tokenResponse) => {\n    const response = await getBusinessByUserAction(tokenResponse);\n    if (response && response.data) {\n      setServiceCount(response.data.service);\n      setService(response.data.service);\n      setCompanyBudgetObject(response.data);\n    }\n  };\n\n  const getGoalsBudget = async () => {\n    const response = await GoalsById(userId, tokenResponse);\n\n    if (\n      response &&\n      response.data &&\n      response.data.data &&\n      response.data.data.length === 0\n    ) {\n      getBusinessByUserAction(tokenResponse).then((res) => {\n        setServiceNew(res.data.service);\n      });\n    } else {\n      let Goals_Budget = response.data.data;\n      if (Goals_Budget) {\n        Goals_Budget &&\n          Goals_Budget.length > 0 &&\n          Goals_Budget.map((val) => {\n            return setComapanyBudget(val.companyBudget);\n          });\n      }\n      let arr = [];\n\n      setAtleastOne(true);\n\n      if (Goals_Budget) {\n        Goals_Budget &&\n          Goals_Budget.length > 0 &&\n          Goals_Budget.map((val, index) => {\n            setCalculatedGoals(val.calculatedgoals);\n\n            if (val.service.length > 0) {\n              val.service.map((val1, index1) => {\n                return arr.push(val1);\n              });\n            }\n          });\n\n        setServiceNew(arr);\n      }\n    }\n  };\n  useEffect(() => {\n    getGoalsBudget();\n  }, [userId]);\n\n  const handleService = (e, serviceIndex) => {\n    const data = e.target.validity.valid ? e.target.value : undefined;\n    let serviceArray = [...serviceNew];\n    console.log(serviceArray, \"serviceArray\");\n    if (e.target.name === \"checked\") {\n      serviceArray[serviceIndex][e.target.name] =\n        !serviceArray[serviceIndex][e.target.name];\n    } else {\n      serviceArray[serviceIndex][e.target.name] = e.target.value;\n    }\n\n    if (data !== undefined) {\n      setServiceNew(serviceArray);\n    }\n  };\n\n  const handleCalculate = async () => {\n    if (validation() && atleastOne) {\n      setCalculate(true);\n      let arr = [];\n      let arr1 = [];\n      let arr2 = [];\n      //revenu\n      let revenue = parseInt(companyBudget && companyBudget.revenueEarn);\n      //working service hours\n      let totalServiceHours = 0;\n      parseInt(\n        serviceNew &&\n          serviceNew.length > 0 &&\n          serviceNew.filter((val) => {\n            if (val.checked === true) {\n              return arr.push(val);\n            }\n          })\n      );\n\n      parseInt(\n        arr.map((val) => {\n          if (val.serviceHours) {\n            return (totalServiceHours += parseInt(val.serviceHours));\n          }\n        })\n      );\n\n      let serviceHoursToMinutes = totalServiceHours * 60;\n      let totalServiceMinutes = 0;\n      parseInt(\n        serviceNew &&\n          serviceNew.length > 0 &&\n          serviceNew.filter((val) => {\n            if (val.checked == true) {\n              return arr1.push(val);\n            }\n          })\n      );\n\n      arr1.map((val) => {\n        if (val.serviceMinute) {\n          return (totalServiceMinutes += parseInt(val.serviceMinute));\n        }\n      });\n\n      let minutesForWorkPerDay = companyBudget && companyBudget.workPerDay * 60;\n\n      let TotalMinutesForServices = serviceHoursToMinutes + totalServiceMinutes;\n\n      // let hoursPerDay = Math.round(\n      //   minutesForWorkPerDay / TotalMinutesForServices\n      // );\n      let hoursPerDay = minutesForWorkPerDay / TotalMinutesForServices;\n\n      let totalServiceCharges = 0;\n      let obj2 = {};\n      serviceNew &&\n        serviceNew.length > 0 &&\n        serviceNew.filter((val) => {\n          if (val.checked == true) {\n            return arr2.push(val);\n          }\n        });\n\n      arr2.map((val) => {\n        if (val.serviceCharge) {\n          totalServiceCharges += parseInt(val.serviceCharge);\n        }\n      });\n\n      let totalClientCharges = parseInt(totalServiceCharges * hoursPerDay);\n\n      let yearlyClients = revenue / totalClientCharges;\n\n      let monthlyClients = yearlyClients / 12;\n\n      let weeklyClients = monthlyClients / 4;\n\n      let obj = {\n        yearlyClients: Math.round(yearlyClients),\n        monthlyClients: Math.round(monthlyClients),\n        weeklyClients: Math.round(weeklyClients),\n        hoursPerDay: Math.round(hoursPerDay),\n        totalServiceCharges: totalServiceCharges,\n      };\n      obj2.cal = obj;\n      let calculategoalBudget = {\n        companyBudget: companyBudget,\n        service: serviceNew,\n        calculatedgoals: obj2.cal,\n      };\n\n      if (TotalMinutesForServices > minutesForWorkPerDay) {\n        createNotification(\n          \"error\",\n          \"Total working hours should be greater than total working hours of service\"\n        );\n      } else {\n        const saveGoalBudget = await saveGoalBudgetAction(\n          calculategoalBudget,\n          tokenResponse\n        );\n        if (saveGoalBudget.status === 200) {\n          createNotification(\"success\", saveGoalBudget.data.message);\n        }\n        getGoalsBudget();\n      }\n      // });\n    } else {\n      createNotification(\"error\", \"Validate the form first\");\n    }\n    let totalServiceCharge = 0;\n    serviceNew &&\n      serviceNew.length > 0 &&\n      serviceNew\n        .filter((val) => val.checked == true)\n        .map((val) => (totalServiceCharge += parseInt(val.serviceCharge)));\n    setTotalChargeService(totalServiceCharge);\n  };\n\n  const handleNumber = () => {\n    navigate(`/number/${idResponse._id}`);\n  };\n\n  const getFunction = () => {\n    getGoalsBudget();\n  };\n\n  const revenuData = async () => {\n    const repsonse = await commonService.getPersonalBudgetAction(tokenResponse);\n    setYearlyIncome(\n      repsonse &&\n        repsonse.personalBudget &&\n        repsonse.personalBudget.summaryObject\n        ? repsonse.personalBudget.summaryObject.netAnnualRemainings\n        : \"\"\n    );\n  };\n\n  useEffect(() => {\n    revenuData();\n  }, []);\n\n  useEffect(() => {\n    revenuData();\n  }, [tokenResponse]);\n\n  return (\n    <>\n      <HeaderTop />\n      <div className=\"dashboard-wrapper\">\n        <Container>\n          <div className=\"dashboard-content\">\n            <div className=\"sidebarmenu\">\n              <Sidebarmenu />\n            </div>\n            <div className=\"ds-content\">\n              <h1 className=\"page-title\">Your Progress</h1>\n              <div className=\"ds-goal-section\">\n                <div className=\"goal-heading\">\n                  <ul>\n                    <li>\n                      <div className=\"goalbox\">\n                        <span className=\"icon\">\n                          {calculatedgoals &&\n                          calculatedgoals.weeklyClients === 0 &&\n                          calculatedgoals.monthlyClients === 0 &&\n                          calculatedgoals.yearlyClients === 0 &&\n                          calculatedgoals.hoursPerDay === 0 ? (\n                            <BsQuestionLg />\n                          ) : calculatedgoals.weeklyClients === 0 ? (\n                            0\n                          ) : calculatedgoals.weeklyClients > 0 ? (\n                            calculatedgoals.weeklyClients\n                          ) : null}\n                          <h4>Weekly Goals</h4>\n                        </span>\n                      </div>\n                    </li>\n                    <li>\n                      <div className=\"goalbox\">\n                        <span className=\"icon\">\n                          {calculatedgoals &&\n                          calculatedgoals.weeklyClients === 0 &&\n                          calculatedgoals.monthlyClients === 0 &&\n                          calculatedgoals.yearlyClients === 0 &&\n                          calculatedgoals.hoursPerDay === 0 ? (\n                            <BsQuestionLg />\n                          ) : calculatedgoals.monthlyClients === 0 ? (\n                            0\n                          ) : calculatedgoals.monthlyClients > 0 ? (\n                            calculatedgoals.monthlyClients\n                          ) : null}\n                          <h4>Monthly Goals</h4>\n                        </span>\n                      </div>\n                    </li>\n                    <li>\n                      <div className=\"goalbox\">\n                        <span className=\"icon\">\n                          {calculatedgoals &&\n                          calculatedgoals.weeklyClients === 0 &&\n                          calculatedgoals.monthlyClients === 0 &&\n                          calculatedgoals.yearlyClients === 0 &&\n                          calculatedgoals.hoursPerDay === 0 ? (\n                            <BsQuestionLg />\n                          ) : calculatedgoals.yearlyClients === 0 ? (\n                            0\n                          ) : calculatedgoals.yearlyClients > 0 ? (\n                            calculatedgoals.yearlyClients\n                          ) : null}\n                          <h4>\n                            {\" \"}\n                            Yearly <br /> Goals\n                          </h4>\n                        </span>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"ds-goal-table\">\n                  <div className=\"bgform\">\n                    <div className=\"form-wrapper\">\n                      <Form>\n                        <Row>\n                          <Col xs={6}>\n                            <Form.Group className=\"mb-3\">\n                              <Form.Label>\n                                How much addtional business revenue do you want\n                                to earn beyond your personal revenue of: $\n                                {yearlyIncome ? yearlyIncome : \"\"}\n                              </Form.Label>\n                              <Form.Control\n                                type=\"text\"\n                                pattern=\"[0-9]*\"\n                                name=\"revenueEarn\"\n                                value={companyBudget.revenueEarn}\n                                onChange={handlecompanyBudget}\n                              />\n                              <span className=\"error\">\n                                {error && error.revenueEarn}\n                              </span>\n                            </Form.Group>\n                          </Col>\n                          <Col xs={6}>\n                            <Form.Group className=\"mb-3\">\n                              <Form.Label>\n                                How many hours do you want to work a day?\n                              </Form.Label>\n                              <Form.Select\n                                name=\"workPerDay\"\n                                value={companyBudget.workPerDay}\n                                onChange={handlecompanyBudget}\n                              >\n                                <option>Select</option>\n                                <option value=\"1\">1 Hour</option>\n                                <option value=\"2\">2 Hours</option>\n                                <option value=\"3\">3 Hours</option>\n                                <option value=\"4\">4 Hours</option>\n                                <option value=\"5\">5 Hours</option>\n                                <option value=\"6\">6 Hours</option>\n                                <option value=\"7\">7 Hours</option>\n                                <option value=\"8\">8 Hours</option>\n                                <option value=\"9\">9 Hours</option>\n                                <option value=\"10\">10 Hours</option>\n                              </Form.Select>\n                              <span className=\"error\">\n                                {error && error.workPerDay}\n                              </span>\n                            </Form.Group>\n                          </Col>\n                          <Col xs={6}>\n                            <Form.Group className=\"mb-3\">\n                              <Form.Label>\n                                How many days do you want to work a week?\n                              </Form.Label>\n                              <Form.Select\n                                name=\"workPerWeek\"\n                                value={companyBudget.workPerWeek}\n                                onChange={handlecompanyBudget}\n                              >\n                                <option>Select</option>\n                                <option value=\"1\">1 Day</option>\n                                <option value=\"2\">2 Days</option>\n                                <option value=\"3\">3 Days</option>\n                                <option value=\"4\">4 Days</option>\n                                <option value=\"5\">5 Days</option>\n                                <option value=\"6\">6 Days</option>\n                                <option value=\"7\">7 Days</option>\n                              </Form.Select>\n                              <span className=\"error\">\n                                {error && error.workPerWeek}\n                              </span>\n                            </Form.Group>\n                          </Col>\n                        </Row>\n                      </Form>\n                    </div>\n                    <div className=\"service-provided\">\n                      <h2 className=\"title\">What Services do you provide?</h2>\n                      <div className=\"service-list\">\n                        {serviceNew &&\n                          serviceNew.length > 0 &&\n                          serviceNew.map((val, index) => {\n                            return (\n                              <GoalsServiceform\n                                index={index}\n                                service={val}\n                                serviceName={val.service}\n                                handleService={handleService}\n                                error1={error1}\n                                tokenResponse={tokenResponse}\n                              />\n                            );\n                          })}\n                      </div>\n                    </div>\n\n                    <div className=\"gd-btn\">\n                      <BusinessServiceModal\n                        getServiceByUser={getServiceByUser}\n                        getFunction={getFunction}\n                      />\n                      <Button onClick={handleCalculate}>Calculate</Button>\n                      <Button>Reset</Button>\n                    </div>\n\n                    <div className=\"personal-budget-box\">\n                      <h2>\n                        {\" \"}\n                        Based on your personal budget and your goal above,here\n                        what we suggest you need to reach them{\" \"}\n                      </h2>\n                      <h1>\n                        Total amount that can be earned per day for these\n                        services $\n                        {calculatedgoals.totalServiceCharges\n                          ? calculatedgoals.totalServiceCharges\n                          : 0}\n                      </h1>\n                      <div className=\"average-list\">\n                        <ul className=\"avgicon\">\n                          <li>\n                            <span className=\"icon\">\n                              {calculatedgoals &&\n                              calculatedgoals.weeklyClients === 0 &&\n                              calculatedgoals.monthlyClients === 0 &&\n                              calculatedgoals.yearlyClients === 0 &&\n                              calculatedgoals.hoursPerDay === 0 ? (\n                                <BsQuestionLg />\n                              ) : calculatedgoals.weeklyClients === 0 ? (\n                                0\n                              ) : calculatedgoals.weeklyClients > 0 ? (\n                                calculatedgoals.weeklyClients\n                              ) : null}\n                            </span>\n                            <span className=\"cl-name\">Clients Weekly</span>\n                          </li>\n                          <li>\n                            <span className=\"icon\">\n                              {calculatedgoals &&\n                              calculatedgoals.weeklyClients === 0 &&\n                              calculatedgoals.monthlyClients === 0 &&\n                              calculatedgoals.yearlyClients === 0 &&\n                              calculatedgoals.hoursPerDay === 0 ? (\n                                <BsQuestionLg />\n                              ) : calculatedgoals.monthlyClients === 0 ? (\n                                0\n                              ) : calculatedgoals.monthlyClients > 0 ? (\n                                calculatedgoals.monthlyClients\n                              ) : null}\n                            </span>\n                            <span className=\"cl-name\">Clients Monthly</span>\n                          </li>\n                          <li>\n                            <span className=\"icon\">\n                              {calculatedgoals &&\n                              calculatedgoals.weeklyClients === 0 &&\n                              calculatedgoals.monthlyClients === 0 &&\n                              calculatedgoals.yearlyClients === 0 &&\n                              calculatedgoals.hoursPerDay === 0 ? (\n                                <BsQuestionLg />\n                              ) : calculatedgoals.yearlyClients === 0 ? (\n                                0\n                              ) : calculatedgoals.yearlyClients > 0 ? (\n                                calculatedgoals.yearlyClients\n                              ) : null}\n                            </span>\n                            <span className=\"cl-name\">Clients Annualy</span>\n                          </li>\n                        </ul>\n                      </div>\n                      <Button onClick={handleNumber}>\n                        Commit to These Goals!\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n      <ToastContainer />\n      <Footer />\n    </>\n  );\n};\n\nexport default Goals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
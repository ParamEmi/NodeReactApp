{"ast":null,"code":"var _jsxFileName = \"/home/webxpert/NodeReactApp/NodeReactApp/frontend/src/pages/GoalsServiceform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBusinessByUserAction } from \"../services/userGoalServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoalsServiceform = _ref => {\n  _s();\n\n  let {\n    index,\n    service,\n    handleService,\n    serviceName,\n    error1,\n    tokenResponse\n  } = _ref;\n  const [bussAct, setBussAct] = useState([]);\n\n  const servName = async () => {\n    const res = await getBusinessByUserAction(tokenResponse);\n    setBussAct(res.data.service);\n  };\n\n  useEffect(() => {\n    servName();\n  }, [tokenResponse]); // const [adminService, setAdminService] = useState();\n  // const [serviceName, setServiceName] = useState();\n  // const getServiceByUser = async () => {\n  //   const response = await getBusinessByUserAction(tokenResponse);\n  //   console.log(response.data.service, \"goalform\");\n  //   const filt =\n  //     response &&\n  //     response.data.service.length > 0 &&\n  //     response.data.service.filter((val) => {\n  //       if (val._id == service._id) {\n  //         return setServiceName(val.service);\n  //       }\n  //     });\n  //   console.log(filt, \"filt\");\n  //   // setAdminService(response.data.service);\n  // };\n  // useEffect(() => {\n  //   getServiceByUser();\n  // }, [tokenResponse]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: service.checked ? \"showdetail service-goal\" : \"service-goal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goalcheckbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        checked: service.checked,\n        name: \"checked\",\n        onChange: e => {\n          handleService(e, index);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name\",\n        children: bussAct && bussAct.filter(val => val._id == service._id).map(val => val.service)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), service.checked && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-list-detail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"How much do you charge for this service?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            pattern: \"[0-9]*\",\n            name: \"serviceCharge\",\n            value: service.serviceCharge,\n            onChange: e => {\n              handleService(e, index);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error1[index] && error1[index].serviceCharge ? error1[index].serviceCharge : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"How long does this service take to complete? (Service + Clean up)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-time\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                name: \"serviceHours\",\n                onChange: e => {\n                  handleService(e, index);\n                },\n                value: service.serviceHours,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"0 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), [...Array.from(Array(13).keys())].slice(1).map((num, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: num ? num + \" hour\" : \"\"\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: error1[index] && error1[index].serviceHours ? error1[index].serviceHours : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                name: \"serviceMinute\",\n                onChange: e => {\n                  handleService(e, index);\n                },\n                value: service.serviceMinute,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), [...Array.from(Array(4).keys())].slice(1).map((num, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: num ? num * 15 + \"minute\" : \"\"\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error\",\n                  children: error1[index] && error1[index].serviceMinute ? error1[index].serviceMinute : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoalsServiceform, \"LsWTjap8oaRv9y888SDVQo1B4jI=\");\n\n_c = GoalsServiceform;\nexport default GoalsServiceform;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalsServiceform\");","map":{"version":3,"names":["React","useState","useEffect","Form","ToastContainer","useDispatch","useSelector","getBusinessByUserAction","GoalsServiceform","index","service","handleService","serviceName","error1","tokenResponse","bussAct","setBussAct","servName","res","data","checked","e","filter","val","_id","map","serviceCharge","serviceHours","Array","from","keys","slice","num","i","serviceMinute"],"sources":["/home/webxpert/NodeReactApp/NodeReactApp/frontend/src/pages/GoalsServiceform.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBusinessByUserAction } from \"../services/userGoalServices\";\n\nconst GoalsServiceform = ({\n  index,\n  service,\n  handleService,\n  serviceName,\n  error1,\n  tokenResponse,\n}) => {\n  const [bussAct, setBussAct] = useState([]);\n\n  const servName = async () => {\n    const res = await getBusinessByUserAction(tokenResponse);\n    setBussAct(res.data.service);\n  };\n\n  useEffect(() => {\n    servName();\n  }, [tokenResponse]);\n  // const [adminService, setAdminService] = useState();\n\n  // const [serviceName, setServiceName] = useState();\n  // const getServiceByUser = async () => {\n  //   const response = await getBusinessByUserAction(tokenResponse);\n  //   console.log(response.data.service, \"goalform\");\n  //   const filt =\n  //     response &&\n  //     response.data.service.length > 0 &&\n  //     response.data.service.filter((val) => {\n  //       if (val._id == service._id) {\n  //         return setServiceName(val.service);\n  //       }\n  //     });\n  //   console.log(filt, \"filt\");\n\n  //   // setAdminService(response.data.service);\n  // };\n\n  // useEffect(() => {\n  //   getServiceByUser();\n  // }, [tokenResponse]);\n\n  return (\n    <div\n      className={service.checked ? \"showdetail service-goal\" : \"service-goal\"}\n    >\n      <div className=\"goalcheckbox\">\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          checked={service.checked}\n          name=\"checked\"\n          onChange={(e) => {\n            handleService(e, index);\n          }}\n        />\n        <span className=\"name\">\n          {bussAct &&\n            bussAct\n              .filter((val) => val._id == service._id)\n              .map((val) => val.service)}\n        </span>\n\n        {service.checked && (\n          <div className=\"service-list-detail\">\n            <Form.Group className=\"mb-3\">\n              <Form.Label>How much do you charge for this service?</Form.Label>\n              <Form.Control\n                type=\"text\"\n                pattern=\"[0-9]*\"\n                name=\"serviceCharge\"\n                value={service.serviceCharge}\n                onChange={(e) => {\n                  handleService(e, index);\n                }}\n              />\n              <span className=\"error\">\n                {error1[index] && error1[index].serviceCharge\n                  ? error1[index].serviceCharge\n                  : null}\n              </span>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>\n                How long does this service take to complete? (Service + Clean\n                up)\n              </Form.Label>\n              <div className=\"service-time\">\n                <div>\n                  <Form.Select\n                    name=\"serviceHours\"\n                    onChange={(e) => {\n                      handleService(e, index);\n                    }}\n                    value={service.serviceHours}\n                  >\n                    <option value=\"\">Select Hours</option>\n                    <option value=\"0\">0 hours</option>\n\n                    {[...Array.from(Array(13).keys())]\n                      .slice(1)\n                      .map((num, i) => (\n                        <option key={i}>{num ? num + \" hour\" : \"\"}</option>\n                      ))}\n                  </Form.Select>\n\n                  <span className=\"error\">\n                    {error1[index] && error1[index].serviceHours\n                      ? error1[index].serviceHours\n                      : null}\n                  </span>\n                </div>\n                <div>\n                  <Form.Select\n                    name=\"serviceMinute\"\n                    onChange={(e) => {\n                      handleService(e, index);\n                    }}\n                    value={service.serviceMinute}\n                  >\n                    <option value=\"\">Select Minutes</option>\n                    {[...Array.from(Array(4).keys())].slice(1).map((num, i) => (\n                      <option key={i}>{num ? num * 15 + \"minute\" : \"\"}</option>\n                    ))}\n\n                    <span className=\"error\">\n                      {error1[index] && error1[index].serviceMinute\n                        ? error1[index].serviceMinute\n                        : null}\n                    </span>\n                  </Form.Select>\n                </div>\n              </div>\n            </Form.Group>\n          </div>\n        )}\n      </div>\n\n      <ToastContainer />\n    </div>\n  );\n};\nexport default GoalsServiceform;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
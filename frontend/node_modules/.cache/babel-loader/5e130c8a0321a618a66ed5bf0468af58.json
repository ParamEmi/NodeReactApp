{"ast":null,"code":"var _jsxFileName = \"/home/webxpert/NodeReactApp/NodeReactApp/frontend/src/resetPassword/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { createNotification } from \"../helper/notification\";\nimport { ToastContainer } from \"react-toastify\";\nimport * as authServices from \"../services/authServices\";\nimport { Button, Form } from \"react-bootstrap\";\nimport HeaderTop from \"../components/HeaderTop\";\nimport Footer from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const [error, setError] = useState({});\n  const [data, setData] = useState({\n    password: \"\",\n    resetLink: token\n  });\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const isFormValid = () => {\n    let pwd = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}$/);\n\n    if (data.password == \"\") {\n      setError({\n        password: \"New password is required!\"\n      });\n      return false;\n    } else if (!pwd.test(data.password)) {\n      setError({\n        password: \"Your password should have at least one special charachter, digits, uppercase and lowercase charachter. Length: 8+ ch-ers.\"\n      });\n      return false;\n    }\n\n    if (confirmPassword === \"\") {\n      setError({\n        confirmPassword: \"Confirm password is required!\"\n      });\n      return false;\n    } else if (!pwd.test(confirmPassword)) {\n      setError({\n        confirmPassword: \"Your password should have at least one special charachter, digits, uppercase and lowercase charachter. Length: 8+ ch-ers.\"\n      });\n      return false;\n    } else {\n      setError({});\n      return true;\n    }\n  };\n\n  const handleChange = async event => {\n    setError({});\n    const {\n      name,\n      value\n    } = event.target;\n    setData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async () => {\n    const isValid = isFormValid();\n\n    if (isValid) {\n      if (data.password !== confirmPassword) {\n        setError({ ...error,\n          confirmPassword: \"Confirm password is not matched\"\n        });\n      } else if (data.password === confirmPassword) {\n        try {\n          const loginResponse = await authServices.resetPassword(data);\n\n          if (loginResponse.status === 200) {\n            createNotification(\"success\", loginResponse.data.message);\n            setTimeout(() => {\n              navigate(\"/\");\n            }, 2000);\n          } else {\n            createNotification(\"error\", loginResponse.data.message);\n          }\n        } catch (error) {\n          console.log(Error);\n        }\n      }\n    }\n  }; // useEffect(async () => {\n  //   setData((prevState) => ({\n  //     ...prevState,\n  //   }));\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forget-password-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forget-pasbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"heading\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"form-control\",\n            type: \"password\",\n            value: data.password,\n            placeholder: \"New Password\",\n            name: \"password\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form-error\",\n            children: error.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"form-control\",\n            type: \"password\",\n            id: \"confirmPassword\",\n            placeholder: \"Confirm Password\",\n            name: \"confirmPassword\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form-error\",\n            children: error.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"resetbtn\",\n            onClick: () => {\n              handleSubmit();\n            },\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signin\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"auth-link text-black\",\n            children: \"Sign in to continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ResetPassword, \"bO3jqeUOCo/nn3d9RTTJUOjhd9o=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","useParams","useHistory","createNotification","ToastContainer","authServices","Button","Form","HeaderTop","Footer","ResetPassword","props","navigate","token","error","setError","data","setData","password","resetLink","confirmPassword","setConfirmPassword","isFormValid","pwd","RegExp","test","handleChange","event","name","value","target","prevState","handleSubmit","isValid","loginResponse","resetPassword","status","message","setTimeout","console","log","Error","e"],"sources":["/home/webxpert/NodeReactApp/NodeReactApp/frontend/src/resetPassword/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { createNotification } from \"../helper/notification\";\nimport { ToastContainer } from \"react-toastify\";\nimport * as authServices from \"../services/authServices\";\nimport { Button, Form } from \"react-bootstrap\";\nimport HeaderTop from \"../components/HeaderTop\";\nimport Footer from \"../components/Footer\";\nconst ResetPassword = (props) => {\n  const navigate = useNavigate();\n\n  const { token } = useParams();\n  const [error, setError] = useState({});\n  const [data, setData] = useState({\n    password: \"\",\n    resetLink: token,\n  });\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const isFormValid = () => {\n    let pwd = new RegExp(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}$/\n    );\n    if (data.password == \"\") {\n      setError({ password: \"New password is required!\" });\n      return false;\n    } else if (!pwd.test(data.password)) {\n      setError({\n        password:\n          \"Your password should have at least one special charachter, digits, uppercase and lowercase charachter. Length: 8+ ch-ers.\",\n      });\n      return false;\n    }\n\n    if (confirmPassword === \"\") {\n      setError({ confirmPassword: \"Confirm password is required!\" });\n      return false;\n    } else if (!pwd.test(confirmPassword)) {\n      setError({\n        confirmPassword:\n          \"Your password should have at least one special charachter, digits, uppercase and lowercase charachter. Length: 8+ ch-ers.\",\n      });\n      return false;\n    } else {\n      setError({});\n      return true;\n    }\n  };\n\n  const handleChange = async (event) => {\n    setError({});\n    const { name, value } = event.target;\n    setData((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = async () => {\n    const isValid = isFormValid();\n    if (isValid) {\n      if (data.password !== confirmPassword) {\n        setError({\n          ...error,\n          confirmPassword: \"Confirm password is not matched\",\n        });\n      } else if (data.password === confirmPassword) {\n        try {\n          const loginResponse = await authServices.resetPassword(data);\n          if (loginResponse.status === 200) {\n            createNotification(\"success\", loginResponse.data.message);\n            setTimeout(() => {\n              navigate(\"/\");\n            }, 2000);\n          } else {\n            createNotification(\"error\", loginResponse.data.message);\n          }\n        } catch (error) {\n          console.log(Error);\n        }\n      }\n    }\n  };\n\n  // useEffect(async () => {\n  //   setData((prevState) => ({\n  //     ...prevState,\n  //   }));\n  // }, []);\n\n  return (\n    <>\n      <HeaderTop />\n      <div className=\"forget-password-wrap\">\n        <div className=\"forget-pasbox\">\n          <h4 className=\"heading\">Reset Password</h4>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              className=\"form-control\"\n              type=\"password\"\n              value={data.password}\n              placeholder=\"New Password\"\n              name=\"password\"\n              onChange={handleChange}\n            />\n            <span className=\"form-error\">{error.password}</span>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              className=\"form-control\"\n              type=\"password\"\n              id=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              name=\"confirmPassword\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <span className=\"form-error\">{error.confirmPassword}</span>\n          </Form.Group>\n          <div className=\"mt-3\">\n            <Button\n              className=\"resetbtn\"\n              onClick={() => {\n                handleSubmit();\n              }}\n            >\n              Reset Password\n            </Button>\n          </div>\n          <div className=\"signin\">\n            <Link to=\"/\" className=\"auth-link text-black\">\n              Sign in to continue\n            </Link>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n      <Footer />\n    </>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}